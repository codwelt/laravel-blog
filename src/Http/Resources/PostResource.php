<?php


namespace Codwelt\Blog\Http\Resources;
use Carbon\Carbon;
use Codwelt\Blog\BlogServiceProvider;
use Codwelt\Blog\Models\Config;
use Codwelt\Blog\Operations\Constants\Path;
use Illuminate\Http\Request;
use Illuminate\Http\Resources\Json\JsonResource;
use Vinkla\Hashids\Facades\Hashids;


/**
 * Class Post
 * @package Codwelt\Blog\Http\Resources
 * @author FuriosoJack <iam@furiosojack.com>
 */
class PostResource extends JsonResource
{

    public static function collection($resource)
    {
        return parent::collection($resource); // TODO: Change the autogenerated stub
    }

    public function toArray($request)
    {
        Carbon::setLocale('es');
        $managetBlog = app('CodweltBlogManager');
        $data = [
            'id' => Hashids::encode($this->id),
            'titulo' => $this->titulo,
            'contenido' => $this->contenido,
            'resumen' => $this->resumen,
            'files' => [
                'imgThumbnail' => $this->getUrlMiniImage(),
                'imgHeader' => $this->getUrlHeaderImage()
            ],
            'fecha_publicacion' => $this->created_at->format("Y-m-d H:m:s"),
            'autor' => new CreatorResource($this->creador),
            'meta_keywords' => $this->meta_keywords,
            'url' => $managetBlog->getUrlPost($this->slug),
            'slug' => $this->slug,
            'hashtags' => HashTagResource::collection($this->hashtags),
            'fuentes' => FuenteResource::collection($this->fuentes),
            'urlRelated' => $this->getUrlRelated(),
            'estado' => $this->state,
            "comentarios_total" => $this->comments()->count()
        ];


        return $data;
    }


   public function with($request)
    {

        $managetBlog = app('CodweltBlogManager');
        $myWith = [
            'meta_tags' => [
                [
                    "key" =>"description",
                    "value" => $this->resumen
                ],[
                    "key" =>"keyworks",
                    "value" => $this->getMetaKeyWords()
                ],
                [
                    "key" =>"robots",
                    "value" => Config::getRobotsArray()['post']
                ],
                [
                    "key" =>"canonical",
                    "value" => $managetBlog->getUrlPostMetaTag($this->slug)
                ],
                [
                    "key" =>"article:author",
                    "value" => $this->creador->getNameModel()
                ],
                [
                    "key" =>"article:published_time",
                    "value" => $this->created_at
                ],
                [
                    "key" =>"og:description",
                    "value" => $this->resumen
                ],
                [
                    "key" =>"og:url",
                    "value" => $managetBlog->getUrlPostMetaTag($this->slug)
                ],
                [
                    "key" =>"og:type",
                    "value" => "article"
                ],
                [
                    "key" =>"og:locale",
                    "value" => app()->getLocale()
                ],
                [
                    "key" =>"og:site_name",
                    "value" => $managetBlog->getDomainMetaTag()
                ],
                [
                    "key" =>"og:image",
                    "value" => $this->getUrlMiniImage()
                ],
                [
                    "key" =>"twitter:title",
                    "value" => $this->titulo
                ],
                [
                    "key" =>"twitter:description",
                    "value" => $this->resumen
                ],
                [
                    "key" =>"twitter:url",
                    "value" => $managetBlog->getUrlPostMetaTag($this->slug)
                ],
                [
                    "key" =>"twitter:site",
                    "value" => !empty(config('seotools.twitter.defaults.site'))  ? config('seotools.twitter.defaults.site') : '@codwelt',
                ],
                [
                    "key" =>"twitter:images0",
                    "value" => $this->getUrlMiniImage(),
                ]
            ]
        ];

        return $myWith;
    }

}