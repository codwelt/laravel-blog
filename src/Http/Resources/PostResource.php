<?php


namespace Codwelt\Blog\Http\Resources;
use Carbon\Carbon;
use Codwelt\Blog\BlogServiceProvider;
use Codwelt\Blog\Models\Config;
use Codwelt\Blog\Operations\Constants\Path;
use Illuminate\Http\Request;
use Illuminate\Http\Resources\Json\JsonResource;
use Vinkla\Hashids\Facades\Hashids;


/**
 * Class Post
 * @package Codwelt\Blog\Http\Resources
 * @author FuriosoJack <iam@furiosojack.com>
 */
class PostResource extends JsonResource
{

    public static function collection($resource)
    {
        return parent::collection($resource); // TODO: Change the autogenerated stub
    }

    public function toArray($request)
    {
        Carbon::setLocale('es');
        $data = [
            'id' => Hashids::encode($this->id),
            'titulo' => $this->titulo,
            'contenido' => $this->contenido,
            'resumen' => $this->resumen,
            'files' => [
                'imgThumbnail' => $this->getUrlMiniImage(),
                'imgHeader' => $this->getUrlHeaderImage()
            ],
            'fecha_publicacion' => $this->created_at->format("Y-m-d H:m:s"),
            'autor' => new CreatorResource($this->creador),
            'meta_keywords' => $this->meta_keywords,
            'url' => $this->getURL(),
            'slug' => $this->slug,
            'hashtags' => HashTagResource::collection($this->hashtags),
            'fuentes' => FuenteResource::collection($this->fuentes),
            'urlRelated' => $this->getUrlRelated(),
            'estado' => $this->state,
            "comentarios_total" => $this->comments()->count()
        ];


        return $data;
    }


   public function with($request)
    {
        $myWith = [
            'meta_tags' => [
                "description" => $this->resumen,
                'keyworks' => $this->getMetaKeyWords(),
                'robots' => Config::getRobotsArray()['post'],
                'canonical' => $this->getUrl(),
                "article:author" => $this->creador->getNameModel(),
                "article:published_time" => $this->created_at,
                'og:title' => $this->titulo,
                'og:description' => $this->resumen,
                'og:url' => $this->getUrl(),
                'og:type' => 'article',
                'og:locale' => app()->getLocale(),
                'og:site_name' => $this->
                'og:updated_time' => $this->created_at,
                'og:site_name' => config('codwelt_blog.site'),
                'twitter:title' => $this->titulo,
                'description' => $this->resumen,
                'og:description' => $this->resumen,
                'twitter:description' => $this->resumen,
                'og:image' => url('storage/'.$this->patch_miniatura),
                'twitter:url' => 'http://url',
                'og:url' => 'http://url',





            ]
        ];

        return $myWith;
    }

}